# helmfile.yaml
helmDefaults:
  timeout: 3600
  wait: true
  atomic: true

# Environment-specific settings
environments:
  default:
    values:
      - values/default.yaml
  prod:
    values:
      - values/prod.yaml
---
# Repositories
repositories:
  - name: jetstack
    url: https://charts.jetstack.io
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: docker-mailserver
    url: https://docker-mailserver.github.io/docker-mailserver-helm/
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: traefik
    url: https://traefik.github.io/charts
  - name: mittwald
    url: https://helm.mittwald.de
  - name: bitnami
    url: https://charts.bitnami.com/bitnami
---
releases:
# Traefik: replace the default k3s traefik with explicit config
  - name: traefik
    namespace: kube-system
    chart: traefik/traefik
    version: 36.0.0
    # Traefik crds ref: https://github.com/traefik/traefik-helm-chart
    #
    # helm install traefik-crds traefik/traefik-crds
    values:
      - values/{{ .Environment.Name }}.yaml
      - traefik/values.yaml.gotmpl

# Replicator: copy tls secrets to different ns
  - name: kubernetes-replicator
    namespace: kube-system                # where you want the controller to live
    chart: mittwald/kubernetes-replicator
    version: "2.5.1"                      # pin to a specific chart version if you like
    values:
      - resources:
          limits:
            cpu: 50m
            memory: 64Mi
          requests:
            memory: 8Mi
        args:
          - -resync-period=5m

# Cert-Manager Chart
  - name: cert-manager
    namespace: cert-manager
    chart: jetstack/cert-manager
    version: v1.11.0
    needs:
      - kube-system/traefik
      - kube-system/kubernetes-replicator
    installed: true
    values:
      - values/{{ .Environment.Name }}.yaml
      - namespace: cert-manager
      - resources:
          limits:
            cpu: "200m"  # (0.2 vCPU)
            memory: "256Mi"  # (256 MiB)
    set:
      # one time install crd first
      # kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.crds.yaml
      - name: installCRDs
        value: false
      - name: prometheus.enabled
        value: false
      - name: webhook.timeoutSeconds
        value: 10

# Ingress Settings
  - name: ingress
    chart: ./ingress-cert
    namespace: cert-manager
    needs:
      - cert-manager/cert-manager
    values:
      - values/{{ .Environment.Name }}.yaml
    set:
      - name: Environment
        value: {{ .Environment.Name }}

# Dummy Service
  - name: dummy-page
    namespace: default
    chart: ./dummy-page
    needs:
      - cert-manager/ingress
    values:
      - values/{{ .Environment.Name }}.yaml
      - namespace: default

# Mail: persistent storage 
  - name: mail-storage
    namespace: mail
    chart: ./mail-storage
    values:
      - values/{{ .Environment.Name }}.yaml

# Prometheus stack
  - name: kube-prom-stack
    namespace: monitoring
    chart: prometheus-community/kube-prometheus-stack
    needs:
      - kube-system/traefik
    version: "72.6.3"              # match latest in helmfile.lock :contentReference[oaicite:3]{index=3}
    # install crds
    # 
    # ref: https://artifacthub.io/packages/helm/prometheus-community/kube-prometheus-stack/10.0.1
    # 
    # kubectl apply -f https://github.com/prometheus-operator/prometheus-operator/releases/download/v0.82.2/stripped-down-crds.yaml
    #
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
    # kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/release-0.82/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
    values:
      - values/{{ .Environment.Name }}.yaml
      - prom-stack/values.yaml.gotmpl
    set:
      - name: crds.enabled
        value: false

# Mail Server
  - name: mailserver
    namespace: mail
    chart: docker-mailserver/docker-mailserver
    version: 4.2.1
    # Traefik crds for ingress route for mail:
    #
    # curl -sSL https://raw.githubusercontent.com/traefik/traefik/v2.9/docs/content/reference/dynamic-configuration/kubernetes-crd-definition-v1.yml -o traefik-crds.yaml
    # kubectl apply -f traefik-crds.yaml
    # 
    needs:
      - cert-manager/cert-manager
      - kube-system/traefik
      - mail/mail-storage
    values:
      - values/{{ .Environment.Name }}.yaml
      - mail/values.yaml.gotmpl

# Loki stack
  - name: loki-stack
    namespace: monitoring
    chart: grafana/loki-stack
    needs:
      - kube-system/traefik
    version: "2.10.2"              # match latest in helmfile.lock :contentReference[oaicite:3]{index=3}
    values:
      - values/{{ .Environment.Name }}.yaml
      - loki-stack/values.yaml.gotmpl

# DB: persistent storage 
  - name: db-storage
    namespace: db
    chart: ./db-storage
    values:
      - values/{{ .Environment.Name }}.yaml

# Postgres stack
  - name: postgres
    namespace: db
    chart: bitnami/postgresql
    version: 16.7.11    
    needs:
      - db/db-storage
    values:
      - values/{{ .Environment.Name }}.yaml
      - db/postgres.values.yaml.gotmpl
