# .github/workflows/cd.yml
name: CD Helmfile

on:
  workflow_run:
    workflows: ["CI Helmfile"]
    types:
      - completed

jobs:
  deploy:
    name: Deploy to VPS
    runs-on: ubuntu-latest

    # only run after CI succeeded and pushing to main
    if: >-
      ${{ github.event.workflow_run.conclusion == 'success' &&
         github.event.workflow_run.event == 'push' }}

    # require manual approval in GitHub → Settings → Environments → production
    environment:
      name: prod
      # you can add URL, reviewers, etc. in the UI

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download rendered manifests from CI
        uses: actions/download-artifact@v4
        with:
          name: helmfile-manifests
          # artifacts come from the triggering workflow_run
          run-id: ${{ github.event.workflow_run.id }}

      - name: SSH and apply manifests
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          certificate: ${{ secrets.SSH_CERTIFICATE }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # base paths
            DEPLOY_BASE=~/deploy/helmfile
            RELEASES=$DEPLOY_BASE/releases
            CURRENT=$DEPLOY_BASE/current

            # timestamp for this release
            TS=$(date +'%Y%m%dT%H%M%SZ')

            # ensure dirs exist
            mkdir -p $RELEASES
            mkdir -p $CURRENT

            # download new rendered manifests into a temp dir
            TMP=$(mktemp -d)
            rsync -avz rendered/ $TMP/

            # archive any existing current into releases/
            if [ -d "$CURRENT" ] && [ "$(ls -A $CURRENT)" ]; then
              mv $CURRENT $RELEASES/$TS
            fi

            # move new render to current
            mv $TMP $CURRENT

            # apply from the current dir
            kubectl apply -f $CURRENT/
